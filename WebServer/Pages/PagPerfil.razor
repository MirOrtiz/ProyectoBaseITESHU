@inject NotificationService NotificationService

@page "/PagPerfil"

<h3>Perfil</h3>

<RadzenButton Text="Nuevo" Icon="add" Click="(()=>Editar(new ListaPerfilModel()))" ButtonStyle="ButtonStyle.Info" /> 

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="15"
                AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                ShowPagingSummary="true" Data="@items" TItem="ListaPerfilModel"
                LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Folio" Property="Id" Width="50px" />
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Nombre Completo" Property="nombreEmp" />
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Clave" Property="claveEmp" />
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Departamento" Property="nombreDpto" />
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Telefono" Property="telefonoEmp" />
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="E-mail" Property="correoEmp" />
        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Fecha Ingreso" Property="fechaIngreso" />

        <RadzenDataGridColumn TItem="ListaPerfilModel" Title="Acciones" Width="100px" Filterable="false" Sortable="false">

            <Template Context="dato">
                <RadzenButton Icon="edit" Click="(()=>Editar(dato))" ButtonStyle="ButtonStyle.Warning" />
                <RadzenButton Icon="delete" Click="(()=>Eliminar(dato))" ButtonStyle="ButtonStyle.Danger" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
    <RadzenButton Click=@(args => OnClick("Guardado Correctamente")) Text="Guardar" ButtonStyle="ButtonStyle.Success"/>
</RadzenStack>

@code {
    List<ListaPerfilModel> items;
    PerfilManager perfilManager;
    DepartamentosManager departamentosManager;

    private void OnClick(string text)
    {
        //NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked", Detail = text });
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        perfilManager = FabricManager.PerfilManager();
        departamentosManager = FabricManager.DepartamentosManager();
        Actualizar();
    }

    void Actualizar()
    {
        items = null;
        items = perfilManager.ObtenerPerfil();
        StateHasChanged();
    }

    async Task Editar(ListaPerfilModel item)
    {
        string titulo = item.Id == 0 ? "Agregar Perfil" : "Editar Perfil";
        Perfil perfil;
        if(item.Id == 0)
        {
            perfil = new Perfil();
        }
        else
        {
            perfil = perfilManager.ObtenerPorId(item.Id);
        }

        var result = await DialogService.OpenAsync(titulo, ds =>
    @<RadzenStack Gap="1.5rem">
        <div class="row">
            <div class="col-2">Folio</div>
            <div class="col-4"><RadzenText @bind-Value=@item.Id class="w-100"/></div> 
            <div class="col-2">Nombre Completo</div>
            <div class="col-4"><RadzenTextBox @bind-Value=@item.nombreEmp class="w-100" /></div>
            <div class="col-2">Clave</div>
            <div class="col-4"><RadzenTextBox @bind-Value=@item.claveEmp class="w-100" /></div>
            <div class="col-2">Departamento</div>
            <div class="col-4"><RadzenTextBox @bind-Value=@item.nombreDpto class="w-100" /></div>
            <div class="col-2">Telefono</div>
            <div class="col-4"><RadzenTextBox @bind-Value=@item.telefonoEmp class="w-100" /></div>
            <div class="col-2">E-mail</div>
            <div class="col-4"><RadzenTextBox @bind-Value=@item.correoEmp class="w-100" /></div>
            <div class="col-2">Fecha Ingreso</div>
            <div class="col-4"><RadzenDatePicker @bind-Value=@item.fechaSolicitud class="w-100" /></div>
        </div>
        <div class="row">
            <div class="col-6"><RadzenButton Icon="save" Text="Guardar" Click="(()=>Guardar(item))" ButtonStyle="ButtonStyle.Success" class="w-100" /></div>
            <div class="col-6"><RadzenButton Icon="cancel" Click="() => ds.Close(false)" Text="Cancelar" ButtonStyle="ButtonStyle.Danger" class="w-100" /></div>
        </div>
    </RadzenStack>
    );
    }

    async Task Eliminar(ListaPerfilModel item)
    {
        // var r = await DialogService.Confirm($"Deseas eliminar al Empleado(a) {item.Id} {item.nombreEmp} ?", "AppVacacionesMarpa", new ConfirmOptions() { OkButtonText = "Si", CancelButtonText = "No" });
        // if (r.Value)
        // {
        //     if (manager.Eliminar(item.Id))
        //     {
        //         ActualizarTabla();
        //     }
        //     else
        //     {
        //         await DialogService.Alert(manager.Error, "Error:", new AlertOptions() { OkButtonText = "OK" });

        //     }
        // }

    }

    async Task Guardar(ListaPerfilModel item)
    {
        // var r = item.Id == 0 ? perfilManager.Insertar(item) : perfilManager.Actualizar(item);
        // if(r != null) 
        // {
        //     DialogService.Close();
        //     Actualizar();
        // }
        // else
        // {
        //     await DialogService.Alert(perfilManager.Error, "Error:", new AlertOptions() { OkButtonText = "OK" });
        // }
    }

    
}
