@inject NotificationService NotificationService

@page "/Configuracion"

<h3>Configuracion</h3>

<p>12 días de Descanso en el primer año trabajado</p>
<p>Cada dos años se aumentarán dos días hasta llegar a los 20</p>
<p>Después dos dias por cada cinco años de trabajo</p>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="15"
                AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                ShowPagingSummary="true" Data="@items" TItem="Configuracion"
                LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="Configuracion" Title="Años de Trabajo" Property="aniosTrabajo" Width="50px" />
        <RadzenDataGridColumn TItem="Configuracion" Title="Días de Vacaciones" Property="DiasVacaciones" Width="50px" />
        <RadzenDataGridColumn TItem="Configuracion" Title="" Property="" Width="50px" />  
    </Columns>
    </RadzenDataGrid>

    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
        <RadzenButton Click=@(args => OnClick("Primary Button")) Text="Guardar" ButtonStyle="ButtonStyle.Success"/>
    </RadzenStack>

@code {
    List<Configuracion> items;
    ConfiguracionManager manager;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        manager = FabricManager.ConfiguracionManager();
        ActualizarTabla();
    }

    void ActualizarTabla()
    {
        items= null;
        //items = manager.ObtenerTodos.ToList();
        StateHasChanged();
    }

    private void OnClick(string text)
    {
        //NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked", Detail = text });
    }
}
